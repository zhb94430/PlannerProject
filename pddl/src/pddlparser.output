Terminals unused in grammar

   "number"
   "domain-def"
   "domain-name"
   "domain-body"
   "problem-def"
   "problem-name"
   "domain-reference"
   "actions"
   "action-def"
   "action-def-body"
   "preconditions-list"
   "effects-list"
   "atomic-formula"
   "predicate"
   "grounded-predicate"
   "literal"
   "literal-list"
   "grounded-literal"
   "grounded-literal-list"
   "grounded-atomic-formula"
   "requirements-def"
   "requirekeys-list"
   "predicates-def"
   "predicates-list"
   "parameters-list"
   "typed-variables-list"
   "variables-list"
   "names-list"
   "typed-names-list"
   "objects-def"
   "init-def"
   "goal-def"


Grammar

    0 $accept: pddl "end of file"

    1 pddl: domain-def
    2     | problem-def

    3 domain-def: "(" "define" domain-name domain-body ")"

    4 domain-name: "(" "domain" "name" ")"

    5 domain-body: requirements-def predicates-def actions
    6            | requirements-def constants predicates-def actions
    7            | requirements-def types predicates-def actions
    8            | requirements-def types constants predicates-def actions

    9 requirements-def: "(" "requirements" requirekeys-list ")"

   10 types: "(" "types" names-list ")"
   11      | "(" "types" typed-names-list ")"

   12 constants: "(" "constants" names-list ")"
   13          | "(" "constants" typed-names-list ")"

   14 predicates-def: "(" "predicates" predicates-list ")"

   15 actions: action-def
   16        | actions action-def

   17 action-def: "(" "action" "name" parameters-list action-def-body ")"

   18 predicates-list: predicate
   19                | predicates-list predicate

   20 parameters-list: "parameters" "(" typed-variables-list ")"
   21                | "parameters" "(" variables-list ")"
   22                | "parameters" "(" ")"

   23 action-def-body: preconditions-list effects-list

   24 preconditions-list: "preconditions" atomic-formula

   25 effects-list: "effects" atomic-formula

   26 problem-def: "(" "define" problem-name domain-reference objects-def init-def goal-def ")"

   27 problem-name: "(" "problem" "name" ")"

   28 domain-reference: "(" "domain" "name" ")"

   29 objects-def: "(" "objects" names-list ")"

   30 init-def: "(" "init" grounded-literal-list ")"

   31 goal-def: "(" "goal" grounded-atomic-formula ")"

   32 requirekeys-list: "requirekey"
   33                 | requirekeys-list "requirekey"

   34 names-list: "name"
   35           | names-list "name"

   36 typed-names-list: names-list "-" "name"
   37                 | typed-names-list names-list "-" "name"

   38 variables-list: "variable"
   39               | variables-list "variable"

   40 typed-variables-list: variables-list "-" "name"
   41                     | typed-variables-list variables-list "-" "name"

   42 literal-list: literal
   43             | literal-list literal

   44 grounded-literal-list: grounded-literal
   45                      | grounded-literal-list grounded-literal

   46 atomic-formula: literal
   47               | "(" "and" literal-list ")"

   48 grounded-atomic-formula: grounded-literal
   49                        | "(" "and" grounded-literal-list ")"

   50 predicate: "(" "name" typed-variables-list ")"
   51          | "(" "name" variables-list ")"
   52          | "(" "=" "variable" "variable" ")"

   53 grounded-predicate: "(" "name" names-list ")"
   54                   | "(" "=" "name" "name" ")"

   55 literal: predicate
   56        | "(" "not" predicate ")"

   57 grounded-literal: grounded-predicate
   58                 | "(" "not" grounded-predicate ")"


Terminals, with rules where they appear

"end of file" (0) 0
error (256)
"define" (258) 3 26
"domain" (259) 4 28
"problem" (260) 27
"requirements" (261) 9
"types" (262) 10 11
"constants" (263) 12 13
"predicates" (264) 14
"action" (265) 17
"parameters" (266) 20 21 22
"preconditions" (267) 24
"effects" (268) 25
"and" (269) 47 49
"not" (270) 56 58
"=" (271) 52 54
"objects" (272) 29
"init" (273) 30
"goal" (274) 31
"(" (275) 3 4 9 10 11 12 13 14 17 20 21 22 26 27 28 29 30 31 47 49
    50 51 52 53 54 56 58
")" (276) 3 4 9 10 11 12 13 14 17 20 21 22 26 27 28 29 30 31 47 49
    50 51 52 53 54 56 58
"-" (277) 36 37 40 41
"name" <std::string> (278) 4 17 27 28 34 35 36 37 40 41 50 51 53 54
"number" <int> (279)
"variable" <std::string> (280) 38 39 52
"requirekey" <std::string> (281) 32 33
"domain-def" <Domain*> (282)
"domain-name" <std::string> (283)
"domain-body" <DomainBody*> (284)
"problem-def" <Problem*> (285)
"problem-name" <std::string> (286)
"domain-reference" <std::string> (287)
"actions" <ActionList*> (288)
"action-def" <Action*> (289)
"action-def-body" <ActionDefBody*> (290)
"preconditions-list" <LiteralList*> (291)
"effects-list" <LiteralList*> (292)
"atomic-formula" <LiteralList*> (293)
"predicate" <Predicate*> (294)
"grounded-predicate" <Predicate*> (295)
"literal" <Literal*> (296)
"literal-list" <LiteralList*> (297)
"grounded-literal" <Literal*> (298)
"grounded-literal-list" <LiteralList*> (299)
"grounded-atomic-formula" <LiteralList*> (300)
"requirements-def" <StringList*> (301)
"requirekeys-list" <StringList*> (302)
"predicates-def" <PredicateList*> (303)
"predicates-list" <PredicateList*> (304)
"parameters-list" <ParameterList*> (305)
"typed-variables-list" <TypeDict*> (306)
"variables-list" <StringList*> (307)
"names-list" <StringList*> (308)
"typed-names-list" <TypeDict*> (309)
"objects-def" <StringList*> (310)
"init-def" <LiteralList*> (311)
"goal-def" <LiteralList*> (312)


Nonterminals, with rules where they appear

$accept (58)
    on left: 0
pddl (59)
    on left: 1 2, on right: 0
domain-def <Domain*> (60)
    on left: 3, on right: 1
domain-name <std::string> (61)
    on left: 4, on right: 3
domain-body <DomainBody*> (62)
    on left: 5 6 7 8, on right: 3
requirements-def <StringList*> (63)
    on left: 9, on right: 5 6 7 8
types (64)
    on left: 10 11, on right: 7 8
constants (65)
    on left: 12 13, on right: 6 8
predicates-def <PredicateList*> (66)
    on left: 14, on right: 5 6 7 8
actions <ActionList*> (67)
    on left: 15 16, on right: 5 6 7 8 16
action-def <Action*> (68)
    on left: 17, on right: 15 16
predicates-list <PredicateList*> (69)
    on left: 18 19, on right: 14 19
parameters-list <ParameterList*> (70)
    on left: 20 21 22, on right: 17
action-def-body <ActionDefBody*> (71)
    on left: 23, on right: 17
preconditions-list <LiteralList*> (72)
    on left: 24, on right: 23
effects-list <LiteralList*> (73)
    on left: 25, on right: 23
problem-def <Problem*> (74)
    on left: 26, on right: 2
problem-name <std::string> (75)
    on left: 27, on right: 26
domain-reference <std::string> (76)
    on left: 28, on right: 26
objects-def <StringList*> (77)
    on left: 29, on right: 26
init-def <LiteralList*> (78)
    on left: 30, on right: 26
goal-def <LiteralList*> (79)
    on left: 31, on right: 26
requirekeys-list <StringList*> (80)
    on left: 32 33, on right: 9 33
names-list <StringList*> (81)
    on left: 34 35, on right: 10 12 29 35 36 37 53
typed-names-list <TypeDict*> (82)
    on left: 36 37, on right: 11 13 37
variables-list <StringList*> (83)
    on left: 38 39, on right: 21 39 40 41 51
typed-variables-list <TypeDict*> (84)
    on left: 40 41, on right: 20 41 50
literal-list <LiteralList*> (85)
    on left: 42 43, on right: 43 47
grounded-literal-list <LiteralList*> (86)
    on left: 44 45, on right: 30 45 49
atomic-formula <LiteralList*> (87)
    on left: 46 47, on right: 24 25
grounded-atomic-formula <LiteralList*> (88)
    on left: 48 49, on right: 31
predicate <Predicate*> (89)
    on left: 50 51 52, on right: 18 19 55 56
grounded-predicate <Predicate*> (90)
    on left: 53 54, on right: 57 58
literal <Literal*> (91)
    on left: 55 56, on right: 42 43 46
grounded-literal <Literal*> (92)
    on left: 57 58, on right: 44 45 48


State 0

    0 $accept: . pddl "end of file"

    "("  shift, and go to state 1

    pddl         go to state 2
    domain-def   go to state 3
    problem-def  go to state 4


State 1

    3 domain-def: "(" . "define" domain-name domain-body ")"
   26 problem-def: "(" . "define" problem-name domain-reference objects-def init-def goal-def ")"

    "define"  shift, and go to state 5


State 2

    0 $accept: pddl . "end of file"

    "end of file"  shift, and go to state 6


State 3

    1 pddl: domain-def .

    $default  reduce using rule 1 (pddl)


State 4

    2 pddl: problem-def .

    $default  reduce using rule 2 (pddl)


State 5

    3 domain-def: "(" "define" . domain-name domain-body ")"
   26 problem-def: "(" "define" . problem-name domain-reference objects-def init-def goal-def ")"

    "("  shift, and go to state 7

    domain-name   go to state 8
    problem-name  go to state 9


State 6

    0 $accept: pddl "end of file" .

    $default  accept


State 7

    4 domain-name: "(" . "domain" "name" ")"
   27 problem-name: "(" . "problem" "name" ")"

    "domain"   shift, and go to state 10
    "problem"  shift, and go to state 11


State 8

    3 domain-def: "(" "define" domain-name . domain-body ")"

    "("  shift, and go to state 12

    domain-body       go to state 13
    requirements-def  go to state 14


State 9

   26 problem-def: "(" "define" problem-name . domain-reference objects-def init-def goal-def ")"

    "("  shift, and go to state 15

    domain-reference  go to state 16


State 10

    4 domain-name: "(" "domain" . "name" ")"

    "name"  shift, and go to state 17


State 11

   27 problem-name: "(" "problem" . "name" ")"

    "name"  shift, and go to state 18


State 12

    9 requirements-def: "(" . "requirements" requirekeys-list ")"

    "requirements"  shift, and go to state 19


State 13

    3 domain-def: "(" "define" domain-name domain-body . ")"

    ")"  shift, and go to state 20


State 14

    5 domain-body: requirements-def . predicates-def actions
    6            | requirements-def . constants predicates-def actions
    7            | requirements-def . types predicates-def actions
    8            | requirements-def . types constants predicates-def actions

    "("  shift, and go to state 21

    types           go to state 22
    constants       go to state 23
    predicates-def  go to state 24


State 15

   28 domain-reference: "(" . "domain" "name" ")"

    "domain"  shift, and go to state 25


State 16

   26 problem-def: "(" "define" problem-name domain-reference . objects-def init-def goal-def ")"

    "("  shift, and go to state 26

    objects-def  go to state 27


State 17

    4 domain-name: "(" "domain" "name" . ")"

    ")"  shift, and go to state 28


State 18

   27 problem-name: "(" "problem" "name" . ")"

    ")"  shift, and go to state 29


State 19

    9 requirements-def: "(" "requirements" . requirekeys-list ")"

    "requirekey"  shift, and go to state 30

    requirekeys-list  go to state 31


State 20

    3 domain-def: "(" "define" domain-name domain-body ")" .

    $default  reduce using rule 3 (domain-def)


State 21

   10 types: "(" . "types" names-list ")"
   11      | "(" . "types" typed-names-list ")"
   12 constants: "(" . "constants" names-list ")"
   13          | "(" . "constants" typed-names-list ")"
   14 predicates-def: "(" . "predicates" predicates-list ")"

    "types"       shift, and go to state 32
    "constants"   shift, and go to state 33
    "predicates"  shift, and go to state 34


State 22

    7 domain-body: requirements-def types . predicates-def actions
    8            | requirements-def types . constants predicates-def actions

    "("  shift, and go to state 35

    constants       go to state 36
    predicates-def  go to state 37


State 23

    6 domain-body: requirements-def constants . predicates-def actions

    "("  shift, and go to state 38

    predicates-def  go to state 39


State 24

    5 domain-body: requirements-def predicates-def . actions

    "("  shift, and go to state 40

    actions     go to state 41
    action-def  go to state 42


State 25

   28 domain-reference: "(" "domain" . "name" ")"

    "name"  shift, and go to state 43


State 26

   29 objects-def: "(" . "objects" names-list ")"

    "objects"  shift, and go to state 44


State 27

   26 problem-def: "(" "define" problem-name domain-reference objects-def . init-def goal-def ")"

    "("  shift, and go to state 45

    init-def  go to state 46


State 28

    4 domain-name: "(" "domain" "name" ")" .

    $default  reduce using rule 4 (domain-name)


State 29

   27 problem-name: "(" "problem" "name" ")" .

    $default  reduce using rule 27 (problem-name)


State 30

   32 requirekeys-list: "requirekey" .

    $default  reduce using rule 32 (requirekeys-list)


State 31

    9 requirements-def: "(" "requirements" requirekeys-list . ")"
   33 requirekeys-list: requirekeys-list . "requirekey"

    ")"           shift, and go to state 47
    "requirekey"  shift, and go to state 48


State 32

   10 types: "(" "types" . names-list ")"
   11      | "(" "types" . typed-names-list ")"

    "name"  shift, and go to state 49

    names-list        go to state 50
    typed-names-list  go to state 51


State 33

   12 constants: "(" "constants" . names-list ")"
   13          | "(" "constants" . typed-names-list ")"

    "name"  shift, and go to state 49

    names-list        go to state 52
    typed-names-list  go to state 53


State 34

   14 predicates-def: "(" "predicates" . predicates-list ")"

    "("  shift, and go to state 54

    predicates-list  go to state 55
    predicate        go to state 56


State 35

   12 constants: "(" . "constants" names-list ")"
   13          | "(" . "constants" typed-names-list ")"
   14 predicates-def: "(" . "predicates" predicates-list ")"

    "constants"   shift, and go to state 33
    "predicates"  shift, and go to state 34


State 36

    8 domain-body: requirements-def types constants . predicates-def actions

    "("  shift, and go to state 38

    predicates-def  go to state 57


State 37

    7 domain-body: requirements-def types predicates-def . actions

    "("  shift, and go to state 40

    actions     go to state 58
    action-def  go to state 42


State 38

   14 predicates-def: "(" . "predicates" predicates-list ")"

    "predicates"  shift, and go to state 34


State 39

    6 domain-body: requirements-def constants predicates-def . actions

    "("  shift, and go to state 40

    actions     go to state 59
    action-def  go to state 42


State 40

   17 action-def: "(" . "action" "name" parameters-list action-def-body ")"

    "action"  shift, and go to state 60


State 41

    5 domain-body: requirements-def predicates-def actions .
   16 actions: actions . action-def

    "("  shift, and go to state 40

    $default  reduce using rule 5 (domain-body)

    action-def  go to state 61


State 42

   15 actions: action-def .

    $default  reduce using rule 15 (actions)


State 43

   28 domain-reference: "(" "domain" "name" . ")"

    ")"  shift, and go to state 62


State 44

   29 objects-def: "(" "objects" . names-list ")"

    "name"  shift, and go to state 49

    names-list  go to state 63


State 45

   30 init-def: "(" . "init" grounded-literal-list ")"

    "init"  shift, and go to state 64


State 46

   26 problem-def: "(" "define" problem-name domain-reference objects-def init-def . goal-def ")"

    "("  shift, and go to state 65

    goal-def  go to state 66


State 47

    9 requirements-def: "(" "requirements" requirekeys-list ")" .

    $default  reduce using rule 9 (requirements-def)


State 48

   33 requirekeys-list: requirekeys-list "requirekey" .

    $default  reduce using rule 33 (requirekeys-list)


State 49

   34 names-list: "name" .

    $default  reduce using rule 34 (names-list)


State 50

   10 types: "(" "types" names-list . ")"
   35 names-list: names-list . "name"
   36 typed-names-list: names-list . "-" "name"

    ")"     shift, and go to state 67
    "-"     shift, and go to state 68
    "name"  shift, and go to state 69


State 51

   11 types: "(" "types" typed-names-list . ")"
   37 typed-names-list: typed-names-list . names-list "-" "name"

    ")"     shift, and go to state 70
    "name"  shift, and go to state 49

    names-list  go to state 71


State 52

   12 constants: "(" "constants" names-list . ")"
   35 names-list: names-list . "name"
   36 typed-names-list: names-list . "-" "name"

    ")"     shift, and go to state 72
    "-"     shift, and go to state 68
    "name"  shift, and go to state 69


State 53

   13 constants: "(" "constants" typed-names-list . ")"
   37 typed-names-list: typed-names-list . names-list "-" "name"

    ")"     shift, and go to state 73
    "name"  shift, and go to state 49

    names-list  go to state 71


State 54

   50 predicate: "(" . "name" typed-variables-list ")"
   51          | "(" . "name" variables-list ")"
   52          | "(" . "=" "variable" "variable" ")"

    "="     shift, and go to state 74
    "name"  shift, and go to state 75


State 55

   14 predicates-def: "(" "predicates" predicates-list . ")"
   19 predicates-list: predicates-list . predicate

    "("  shift, and go to state 54
    ")"  shift, and go to state 76

    predicate  go to state 77


State 56

   18 predicates-list: predicate .

    $default  reduce using rule 18 (predicates-list)


State 57

    8 domain-body: requirements-def types constants predicates-def . actions

    "("  shift, and go to state 40

    actions     go to state 78
    action-def  go to state 42


State 58

    7 domain-body: requirements-def types predicates-def actions .
   16 actions: actions . action-def

    "("  shift, and go to state 40

    $default  reduce using rule 7 (domain-body)

    action-def  go to state 61


State 59

    6 domain-body: requirements-def constants predicates-def actions .
   16 actions: actions . action-def

    "("  shift, and go to state 40

    $default  reduce using rule 6 (domain-body)

    action-def  go to state 61


State 60

   17 action-def: "(" "action" . "name" parameters-list action-def-body ")"

    "name"  shift, and go to state 79


State 61

   16 actions: actions action-def .

    $default  reduce using rule 16 (actions)


State 62

   28 domain-reference: "(" "domain" "name" ")" .

    $default  reduce using rule 28 (domain-reference)


State 63

   29 objects-def: "(" "objects" names-list . ")"
   35 names-list: names-list . "name"

    ")"     shift, and go to state 80
    "name"  shift, and go to state 69


State 64

   30 init-def: "(" "init" . grounded-literal-list ")"

    "("  shift, and go to state 81

    grounded-literal-list  go to state 82
    grounded-predicate     go to state 83
    grounded-literal       go to state 84


State 65

   31 goal-def: "(" . "goal" grounded-atomic-formula ")"

    "goal"  shift, and go to state 85


State 66

   26 problem-def: "(" "define" problem-name domain-reference objects-def init-def goal-def . ")"

    ")"  shift, and go to state 86


State 67

   10 types: "(" "types" names-list ")" .

    $default  reduce using rule 10 (types)


State 68

   36 typed-names-list: names-list "-" . "name"

    "name"  shift, and go to state 87


State 69

   35 names-list: names-list "name" .

    $default  reduce using rule 35 (names-list)


State 70

   11 types: "(" "types" typed-names-list ")" .

    $default  reduce using rule 11 (types)


State 71

   35 names-list: names-list . "name"
   37 typed-names-list: typed-names-list names-list . "-" "name"

    "-"     shift, and go to state 88
    "name"  shift, and go to state 69


State 72

   12 constants: "(" "constants" names-list ")" .

    $default  reduce using rule 12 (constants)


State 73

   13 constants: "(" "constants" typed-names-list ")" .

    $default  reduce using rule 13 (constants)


State 74

   52 predicate: "(" "=" . "variable" "variable" ")"

    "variable"  shift, and go to state 89


State 75

   50 predicate: "(" "name" . typed-variables-list ")"
   51          | "(" "name" . variables-list ")"

    "variable"  shift, and go to state 90

    variables-list        go to state 91
    typed-variables-list  go to state 92


State 76

   14 predicates-def: "(" "predicates" predicates-list ")" .

    $default  reduce using rule 14 (predicates-def)


State 77

   19 predicates-list: predicates-list predicate .

    $default  reduce using rule 19 (predicates-list)


State 78

    8 domain-body: requirements-def types constants predicates-def actions .
   16 actions: actions . action-def

    "("  shift, and go to state 40

    $default  reduce using rule 8 (domain-body)

    action-def  go to state 61


State 79

   17 action-def: "(" "action" "name" . parameters-list action-def-body ")"

    "parameters"  shift, and go to state 93

    parameters-list  go to state 94


State 80

   29 objects-def: "(" "objects" names-list ")" .

    $default  reduce using rule 29 (objects-def)


State 81

   53 grounded-predicate: "(" . "name" names-list ")"
   54                   | "(" . "=" "name" "name" ")"
   58 grounded-literal: "(" . "not" grounded-predicate ")"

    "not"   shift, and go to state 95
    "="     shift, and go to state 96
    "name"  shift, and go to state 97


State 82

   30 init-def: "(" "init" grounded-literal-list . ")"
   45 grounded-literal-list: grounded-literal-list . grounded-literal

    "("  shift, and go to state 81
    ")"  shift, and go to state 98

    grounded-predicate  go to state 83
    grounded-literal    go to state 99


State 83

   57 grounded-literal: grounded-predicate .

    $default  reduce using rule 57 (grounded-literal)


State 84

   44 grounded-literal-list: grounded-literal .

    $default  reduce using rule 44 (grounded-literal-list)


State 85

   31 goal-def: "(" "goal" . grounded-atomic-formula ")"

    "("  shift, and go to state 100

    grounded-atomic-formula  go to state 101
    grounded-predicate       go to state 83
    grounded-literal         go to state 102


State 86

   26 problem-def: "(" "define" problem-name domain-reference objects-def init-def goal-def ")" .

    $default  reduce using rule 26 (problem-def)


State 87

   36 typed-names-list: names-list "-" "name" .

    $default  reduce using rule 36 (typed-names-list)


State 88

   37 typed-names-list: typed-names-list names-list "-" . "name"

    "name"  shift, and go to state 103


State 89

   52 predicate: "(" "=" "variable" . "variable" ")"

    "variable"  shift, and go to state 104


State 90

   38 variables-list: "variable" .

    $default  reduce using rule 38 (variables-list)


State 91

   39 variables-list: variables-list . "variable"
   40 typed-variables-list: variables-list . "-" "name"
   51 predicate: "(" "name" variables-list . ")"

    ")"         shift, and go to state 105
    "-"         shift, and go to state 106
    "variable"  shift, and go to state 107


State 92

   41 typed-variables-list: typed-variables-list . variables-list "-" "name"
   50 predicate: "(" "name" typed-variables-list . ")"

    ")"         shift, and go to state 108
    "variable"  shift, and go to state 90

    variables-list  go to state 109


State 93

   20 parameters-list: "parameters" . "(" typed-variables-list ")"
   21                | "parameters" . "(" variables-list ")"
   22                | "parameters" . "(" ")"

    "("  shift, and go to state 110


State 94

   17 action-def: "(" "action" "name" parameters-list . action-def-body ")"

    "preconditions"  shift, and go to state 111

    action-def-body     go to state 112
    preconditions-list  go to state 113


State 95

   58 grounded-literal: "(" "not" . grounded-predicate ")"

    "("  shift, and go to state 114

    grounded-predicate  go to state 115


State 96

   54 grounded-predicate: "(" "=" . "name" "name" ")"

    "name"  shift, and go to state 116


State 97

   53 grounded-predicate: "(" "name" . names-list ")"

    "name"  shift, and go to state 49

    names-list  go to state 117


State 98

   30 init-def: "(" "init" grounded-literal-list ")" .

    $default  reduce using rule 30 (init-def)


State 99

   45 grounded-literal-list: grounded-literal-list grounded-literal .

    $default  reduce using rule 45 (grounded-literal-list)


State 100

   49 grounded-atomic-formula: "(" . "and" grounded-literal-list ")"
   53 grounded-predicate: "(" . "name" names-list ")"
   54                   | "(" . "=" "name" "name" ")"
   58 grounded-literal: "(" . "not" grounded-predicate ")"

    "and"   shift, and go to state 118
    "not"   shift, and go to state 95
    "="     shift, and go to state 96
    "name"  shift, and go to state 97


State 101

   31 goal-def: "(" "goal" grounded-atomic-formula . ")"

    ")"  shift, and go to state 119


State 102

   48 grounded-atomic-formula: grounded-literal .

    $default  reduce using rule 48 (grounded-atomic-formula)


State 103

   37 typed-names-list: typed-names-list names-list "-" "name" .

    $default  reduce using rule 37 (typed-names-list)


State 104

   52 predicate: "(" "=" "variable" "variable" . ")"

    ")"  shift, and go to state 120


State 105

   51 predicate: "(" "name" variables-list ")" .

    $default  reduce using rule 51 (predicate)


State 106

   40 typed-variables-list: variables-list "-" . "name"

    "name"  shift, and go to state 121


State 107

   39 variables-list: variables-list "variable" .

    $default  reduce using rule 39 (variables-list)


State 108

   50 predicate: "(" "name" typed-variables-list ")" .

    $default  reduce using rule 50 (predicate)


State 109

   39 variables-list: variables-list . "variable"
   41 typed-variables-list: typed-variables-list variables-list . "-" "name"

    "-"         shift, and go to state 122
    "variable"  shift, and go to state 107


State 110

   20 parameters-list: "parameters" "(" . typed-variables-list ")"
   21                | "parameters" "(" . variables-list ")"
   22                | "parameters" "(" . ")"

    ")"         shift, and go to state 123
    "variable"  shift, and go to state 90

    variables-list        go to state 124
    typed-variables-list  go to state 125


State 111

   24 preconditions-list: "preconditions" . atomic-formula

    "("  shift, and go to state 126

    atomic-formula  go to state 127
    predicate       go to state 128
    literal         go to state 129


State 112

   17 action-def: "(" "action" "name" parameters-list action-def-body . ")"

    ")"  shift, and go to state 130


State 113

   23 action-def-body: preconditions-list . effects-list

    "effects"  shift, and go to state 131

    effects-list  go to state 132


State 114

   53 grounded-predicate: "(" . "name" names-list ")"
   54                   | "(" . "=" "name" "name" ")"

    "="     shift, and go to state 96
    "name"  shift, and go to state 97


State 115

   58 grounded-literal: "(" "not" grounded-predicate . ")"

    ")"  shift, and go to state 133


State 116

   54 grounded-predicate: "(" "=" "name" . "name" ")"

    "name"  shift, and go to state 134


State 117

   35 names-list: names-list . "name"
   53 grounded-predicate: "(" "name" names-list . ")"

    ")"     shift, and go to state 135
    "name"  shift, and go to state 69


State 118

   49 grounded-atomic-formula: "(" "and" . grounded-literal-list ")"

    "("  shift, and go to state 81

    grounded-literal-list  go to state 136
    grounded-predicate     go to state 83
    grounded-literal       go to state 84


State 119

   31 goal-def: "(" "goal" grounded-atomic-formula ")" .

    $default  reduce using rule 31 (goal-def)


State 120

   52 predicate: "(" "=" "variable" "variable" ")" .

    $default  reduce using rule 52 (predicate)


State 121

   40 typed-variables-list: variables-list "-" "name" .

    $default  reduce using rule 40 (typed-variables-list)


State 122

   41 typed-variables-list: typed-variables-list variables-list "-" . "name"

    "name"  shift, and go to state 137


State 123

   22 parameters-list: "parameters" "(" ")" .

    $default  reduce using rule 22 (parameters-list)


State 124

   21 parameters-list: "parameters" "(" variables-list . ")"
   39 variables-list: variables-list . "variable"
   40 typed-variables-list: variables-list . "-" "name"

    ")"         shift, and go to state 138
    "-"         shift, and go to state 106
    "variable"  shift, and go to state 107


State 125

   20 parameters-list: "parameters" "(" typed-variables-list . ")"
   41 typed-variables-list: typed-variables-list . variables-list "-" "name"

    ")"         shift, and go to state 139
    "variable"  shift, and go to state 90

    variables-list  go to state 109


State 126

   47 atomic-formula: "(" . "and" literal-list ")"
   50 predicate: "(" . "name" typed-variables-list ")"
   51          | "(" . "name" variables-list ")"
   52          | "(" . "=" "variable" "variable" ")"
   56 literal: "(" . "not" predicate ")"

    "and"   shift, and go to state 140
    "not"   shift, and go to state 141
    "="     shift, and go to state 74
    "name"  shift, and go to state 75


State 127

   24 preconditions-list: "preconditions" atomic-formula .

    $default  reduce using rule 24 (preconditions-list)


State 128

   55 literal: predicate .

    $default  reduce using rule 55 (literal)


State 129

   46 atomic-formula: literal .

    $default  reduce using rule 46 (atomic-formula)


State 130

   17 action-def: "(" "action" "name" parameters-list action-def-body ")" .

    $default  reduce using rule 17 (action-def)


State 131

   25 effects-list: "effects" . atomic-formula

    "("  shift, and go to state 126

    atomic-formula  go to state 142
    predicate       go to state 128
    literal         go to state 129


State 132

   23 action-def-body: preconditions-list effects-list .

    $default  reduce using rule 23 (action-def-body)


State 133

   58 grounded-literal: "(" "not" grounded-predicate ")" .

    $default  reduce using rule 58 (grounded-literal)


State 134

   54 grounded-predicate: "(" "=" "name" "name" . ")"

    ")"  shift, and go to state 143


State 135

   53 grounded-predicate: "(" "name" names-list ")" .

    $default  reduce using rule 53 (grounded-predicate)


State 136

   45 grounded-literal-list: grounded-literal-list . grounded-literal
   49 grounded-atomic-formula: "(" "and" grounded-literal-list . ")"

    "("  shift, and go to state 81
    ")"  shift, and go to state 144

    grounded-predicate  go to state 83
    grounded-literal    go to state 99


State 137

   41 typed-variables-list: typed-variables-list variables-list "-" "name" .

    $default  reduce using rule 41 (typed-variables-list)


State 138

   21 parameters-list: "parameters" "(" variables-list ")" .

    $default  reduce using rule 21 (parameters-list)


State 139

   20 parameters-list: "parameters" "(" typed-variables-list ")" .

    $default  reduce using rule 20 (parameters-list)


State 140

   47 atomic-formula: "(" "and" . literal-list ")"

    "("  shift, and go to state 145

    literal-list  go to state 146
    predicate     go to state 128
    literal       go to state 147


State 141

   56 literal: "(" "not" . predicate ")"

    "("  shift, and go to state 54

    predicate  go to state 148


State 142

   25 effects-list: "effects" atomic-formula .

    $default  reduce using rule 25 (effects-list)


State 143

   54 grounded-predicate: "(" "=" "name" "name" ")" .

    $default  reduce using rule 54 (grounded-predicate)


State 144

   49 grounded-atomic-formula: "(" "and" grounded-literal-list ")" .

    $default  reduce using rule 49 (grounded-atomic-formula)


State 145

   50 predicate: "(" . "name" typed-variables-list ")"
   51          | "(" . "name" variables-list ")"
   52          | "(" . "=" "variable" "variable" ")"
   56 literal: "(" . "not" predicate ")"

    "not"   shift, and go to state 141
    "="     shift, and go to state 74
    "name"  shift, and go to state 75


State 146

   43 literal-list: literal-list . literal
   47 atomic-formula: "(" "and" literal-list . ")"

    "("  shift, and go to state 145
    ")"  shift, and go to state 149

    predicate  go to state 128
    literal    go to state 150


State 147

   42 literal-list: literal .

    $default  reduce using rule 42 (literal-list)


State 148

   56 literal: "(" "not" predicate . ")"

    ")"  shift, and go to state 151


State 149

   47 atomic-formula: "(" "and" literal-list ")" .

    $default  reduce using rule 47 (atomic-formula)


State 150

   43 literal-list: literal-list literal .

    $default  reduce using rule 43 (literal-list)


State 151

   56 literal: "(" "not" predicate ")" .

    $default  reduce using rule 56 (literal)
